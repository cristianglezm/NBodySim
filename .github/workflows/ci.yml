name: ci
on: push

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.config.name }} ${{ matrix.type.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: LinuxGCC, os: ubuntu-latest, prefix: xvfb-run -a }
        config:
        - { name: Shared}
        type:
        - { name: Release }
        - { name: Debug, flags: -DCMAKE_BUILD_TYPE=Debug }
        include:
        - platform: { name: LinuxGCC, os: ubuntu-latest }
          config: { name: Shared }
    steps:
    - name: checkout code
      uses: actions/checkout@v4

    - name: cache
      id: cache-sfml
      uses: actions/cache@v4
      with:
        path: SFML/build/install
        key: ${{ matrix.platform.name }}-${{ matrix.type.name }}-${{ matrix.config.name }}

    - name: install linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update && sudo apt-get install xorg-dev libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev

    - name: build sfml
      if: runner.os == 'Linux' && steps.cache-sfml.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/SFML/SFML && cd SFML && git checkout 2.6.x
        export SFML_ROOT=$(pwd)/build/install
        mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/install -DCMAKE_BUILD_TYPE=${{ matrix.type.name }} .. && make -j4 install && cd ../..

    - name: configure and build
      if: matrix.platform.name == 'LinuxGCC'
      shell: bash
      run: |
        mkdir build && cd build
        cmake -DSFML_ROOT=${GITHUB_WORKSPACE}/SFML/build/install -DCMAKE_INSTALL_PREFIX=$(pwd)/install ..
        make -j4 install
